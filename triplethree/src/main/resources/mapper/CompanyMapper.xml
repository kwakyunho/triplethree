<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="shop.triplethree.mapper.CompanyMapper">
	
	<!-- 부서정보 등록 쿼리문 -->
	<insert id="insertOrganizationChart" parameterType="shop.triplethree.vo.Company">
		INSERT INTO
			DEMG (
				code
				,dename
				,demg_id
				,updamgcode
				,reason
				,writer
				,writer_day)
		VALUES
			(#{departmentCode}
			,#{departmentNameBe}
			,#{departmentLevel}
			,#{departmentUpcode}
			,#{departmentSau}
			,#{sid}
			,NOW());
	</insert>
	
	<!-- 부서정보 리스트 쿼리문 -->
	<select id="selectOrganizationChart" resultType="shop.triplethree.vo.Company">
		SELECT
			d.code AS departmentCode
			,d.dename AS departmentNameBe
			,d.demg_id AS departmentLevel
			,d.updamgcode AS departmentUpcode
			,d.writer AS departmentWriter
			,d.writer_day AS departmentWriterDay
			,d.approver AS departmentApprover
			,d.approver_st AS departmentApperverSt
			,d.appro_day AS departmentApproDay
			,d.reason AS departmentSau
			,d.yes_or_no AS departmentYesNO
			,e.emp_name AS empName
			,D.dename AS deName
		FROM
			DEMG AS d
		LEFT JOIN
			EMP_MANAGE AS e
		ON 
			d.writer = e.emp_num
		LEFT JOIN
			DEMG AS D
		ON
			D.CODE = e.demgcode
	</select>
	
	<!-- 부서등록시 상위부서 selectbox 리스트 쿼리문 -->
	<select id="selectBox" resultType="shop.triplethree.vo.Company">
		SELECT
			code AS departmentCode
			,dename AS departmentNameBe
			,demg_id AS departmentLevel
			,updamgcode AS departmentUpcode
			,writer AS departmentWriter
			,writer_day AS departmentWriterDay
			,approver AS departmentApprover
			,approver_st AS departmentApperverSt
			,appro_day AS departmentApproDay
			,reason AS departmentSau
			,yes_or_no AS departmentYesNO
		FROM
			DEMG
		WHERE
			yes_or_no = 'Y'
	</select>
	
	<!-- 부서명으로 부서코드 가져오기 -->
	<select id="selectUpCode" parameterType="String" resultType="String">
		SELECT 
			code
		FROM 
			DEMG
		WHERE 
			dename = #{upCode};
	</select>
	
	<!-- 부서정보 삭제 쿼리문 (상태만 N으로 변경) -->
	<update id="deleteOrganizationChart" parameterType="shop.triplethree.vo.Company">
		UPDATE 
			DEMG AS d 
		SET 
			d.yes_or_no  = 'N' 
			,d.reason = '사용안함'
		WHERE 
			d.code = #{departmentCode}
	</update>
	
	<!-- 부서정보 수정 쿼리문 -->
	<update id="updateOrganizationChart" parameterType="shop.triplethree.vo.Company">
		UPDATE 
			DEMG AS d 
		SET 
			d.dename = #{departmentNameAf}
			,d.demg_id = #{departmentLevel}
			,d.updamgcode = #{departmentUpcode}
			,d.reason = #{departmentSau}
			,d.writer = #{sid}
		WHERE 
			d.dename = #{departmentNameBe}
	</update>
	
	<!-- 직급정보 등록 쿼리 -->
	<insert id="insertPosition" parameterType="shop.triplethree.vo.Position">
		INSERT INTO
			POSISYS (
				code
				,poname
				,level
				,reason
				,writer
				,writer_day)
		VALUES
			(#{positionCode}
			,#{positionNameBe}
			,#{positionLevel}
			,#{positionSau}
			,#{sid}
			,NOW());
	</insert>
	
	<!-- 직급정보 수정 쿼리문 -->
	<update id="updatePosition" parameterType="shop.triplethree.vo.Position">
		UPDATE 
			POSISYS
		SET 
			poname = #{positionNameAf}
			,level = #{positionLevel}
			,reason = #{positionSau}
			,writer = #{sid}
		WHERE 
			poname = #{positionNameBe}
	</update>
	
	<!-- 직급정보 리스트 쿼리문 -->
	<select id="selectPosition" resultType="shop.triplethree.vo.Position">
		SELECT
			p.code AS positionCode
			,p.poname AS positionNameBe
			,p.level AS positionLevel
			,p.writer AS positionWriter
			,p.writer_day AS positionWriterDay
			,p.approver AS positionApprover
			,p.approver_st AS positionApperverSt
			,p.appro_day AS positionApproDay
			,p.reason AS positionSau
			,p.yes_or_no AS positionYesNO
			,e.emp_name AS empName
			,D.dename AS deName
		FROM 
			POSISYS AS p
		LEFT JOIN
			EMP_MANAGE AS e
		ON 
			p.writer = e.emp_num
		LEFT JOIN
			DEMG AS D
		ON
			D.CODE = e.demgcode
	</select>
	
	<!-- 직급정보 삭제 쿼리문 ( 상태만 N으로 변경 ) -->
	<delete id="deletePosition" parameterType="shop.triplethree.vo.Position">
		UPDATE 
			POSISYS AS p
		SET 
			p.yes_or_no  = 'N' 
			,p.reason = '사용안함'
		WHERE 
			p.code = #{positionCode}
	</delete>
	
	<!-- 부서명 유효성 검사진행 -->
	<select id="checkDeName" parameterType="shop.triplethree.vo.Company" resultType="int">
		SELECT
			COUNT(1) AS cnt
		FROM 
			DEMG AS D
		WHERE
			D.dename = #{departmentNameBe}
		AND
			yes_or_no = 'Y'
	</select>
	
	<!-- 직급명 유효성 검사진행 -->
	<select id="checkPoName" parameterType="shop.triplethree.vo.Position" resultType="int">
		SELECT
			COUNT(1) AS cnt
		FROM 
			POSISYS AS P
		WHERE
			P.poname = #{positionNameBe}
		AND
			yes_or_no = 'Y'
	</select>
	<!--회사정봉 등록  -->
	<!-- <insert id="insertCompany" parameterType="shop.triplethree.vo.Company">
	INSERT INTO
	EM_INFO
		(code,co_name,co_ceoname,co_postcode,co_addr,co_detailaddr,co_extraaddr,co_bln,co_fax,co_phone,co_email,co_logo,writer,writer_day)
	VALUES
		(#{Code}
		,#{coName}
		,#{coCeoname}
		,#{coPostCode}
		,#{coAddr}
		,#{coDetailAddr}
		,#{coExtraAddr}
		,#{coBin}
		,#{coFax}
		,#{coPhone}
		,#{coEmail}
		,#{coLogo}
		,#{writer}
		,now()
	) 
	</insert>-->
	<!--회사 정보 조회  -->
	<select id="selectCompany" resultType="shop.triplethree.vo.Company">
	select
		code AS Code
		,co_name AS coName
		,co_ceoname AS coCeoname
		,co_postcode AS coPostCode
		,co_detailaddr AS coDetailAddr
		,co_extraaddr AS coExtraAddr
		,co_addr AS coAddr
		,co_bln AS coBin
		,co_fax AS coFax
		,co_phone AS coPhone
		,co_email AS coEmail
		,co_logo AS coLogo
		,writer AS writer
		,writer_day AS writerDay
		,yes_or_no AS yesOrNo
		,co_reason AS coReason
	FROM 
		EM_INFO
	</select>
	
	<!--회사 정보 수정클릭시 화면 보여주기  -->
	<select id="updateCompanySelect" resultType="shop.triplethree.vo.Company">
	select
		code AS Code
		,co_name AS coName
		,co_ceoname AS coCeoname
		,co_postcode AS coPostCode
		,co_detailaddr AS coDetailAddr
		,co_extraaddr AS coExtraAddr
		,co_addr AS coAddr
		,co_bln AS coBin
		,co_fax AS coFax
		,co_phone AS coPhone
		,co_email AS coEmail
		,co_logo AS coLogo
		,writer AS writer
		,writer_day AS writerDay
		,yes_or_no AS yesOrNo
		,co_reason AS coReason
	FROM 
		EM_INFO
	where
		code=#{Code}	
	
	</select>
	<!--회사정보 수정  -->
	<update id="updateCompany" parameterType="shop.triplethree.vo.Company">
		UPDATE EM_INFO
	SET
		co_ceoname=#{coCeoname}		
		,co_postcode=#{coPostCode}
		,co_addr=#{coAddr}
		,co_detailaddr=#{coDetailAddr}
		,co_extraaddr=#{coExtraAddr}
		,co_fax=#{coFax}		
		,co_phone=#{coPhone}
		,co_email=#{coEmail}
		,co_logo=#{coLogo}
		,writer=#{writer}
		,writer_day=now()
		,co_reason=#{coReason}
	where
		code=#{Code}
	</update>
	<!--회사정보 상세보기  -->
	<select id="companyDetail" resultType="shop.triplethree.vo.Company">
	select
		code AS Code
		,co_name AS coName
		,co_ceoname AS coCeoname
		,co_postcode AS coPostCode
		,co_detailaddr AS coDetailAddr
		,co_extraaddr AS coExtraAddr
		,co_addr AS coAddr
		,co_bln AS coBin
		,co_fax AS coFax
		,co_phone AS coPhone
		,co_email AS coEmail
		,co_logo AS coLogo
		,writer AS writer
		,writer_day AS writerDay
		,yes_or_no AS yesOrNo
		,co_reason AS coReason
	FROM 
		EM_INFO
	where
		co_name=#{coName}	
	
	</select>
	<update id="deleteCompany" parameterType="shop.triplethree.vo.Company">
	
		UPDATE 
			EM_INFO AS em
		SET 
			em.yes_or_no  = 'N' 
			,em.co_reason = '폐업'
		WHERE 
			em.co_name=#{coName}
	</update>
	
		<insert id="insertCompany" parameterType="shop.triplethree.vo.Company">
		INSERT INTO
			EM_INFO(
				code
				,co_name
				,co_ceoname
				,co_postcode
				,co_addr
				,co_detailaddr
				,co_extraaddr
				,co_bln
				,co_fax
				,co_phone
				,co_email
				,co_logo
				,writer
				,writer_day)
		VALUES
			(#{Code}
			,#{coName}
			,#{coCeoname}
			,#{coPostCode}
			,#{coAddr}
			,#{coDetailAddr}
			,#{coExtraAddr}
			,#{coBin}
			,#{coFax}
			,#{coPhone}
			,#{coEmail}
			,#{coLogo}
			,#{sid}
			,NOW())
	</insert>
</mapper>